
html {
  background: var(--sl-color-gray-100);
  overflow-y: scroll;
  overflow-x: hidden;
  height: 100%;
  --sl-color-danger-300: #fca5a5;
  --sl-color-primary-400: #38bdf8;
}

html::-webkit-scrollbar {
  width: 16px;
}

html::-webkit-scrollbar-thumb {
  background-color: #b0b0b0;
  background-clip: padding-box;
  border-bottom: 6px solid transparent;
  border-top: 6px solid transparent;
}

html::-webkit-scrollbar-track {
  background-color: transparent;
}
/* Buttons */
html::-webkit-scrollbar-button:single-button {
  background-color: transparent;
  display: block;
  border-style: solid;
  height: 16px;
  width: 16px;
  padding: 2px;
}
/* Up */
html::-webkit-scrollbar-button:single-button:vertical:decrement {
  border-width: 0 8px 8px 8px;
  border-color: transparent transparent var(--sl-color-gray-600) transparent;
}

html::-webkit-scrollbar-button:single-button:vertical:decrement:hover {
  border-color: transparent transparent var(--sl-color-gray-800) transparent;
}

html::-webkit-scrollbar-button:single-button:vertical:decrement:disabled {
  border-color: transparent transparent var(--sl-color-gray-400) transparent;
}

/* Down */
html::-webkit-scrollbar-button:single-button:vertical:increment {
  border-width: 8px 8px 0 8px;
  border-color: var(--sl-color-gray-600) transparent transparent transparent;
}

html::-webkit-scrollbar-button:vertical:single-button:increment:hover {
  border-color: var(--sl-color-gray-800) transparent transparent transparent;
}

html::-webkit-scrollbar-button:vertical:single-button:increment:disabled {
  border-color: var(--sl-color-gray-400) transparent transparent transparent;
}

* {
  outline: none;
}

a:not([href]) {
  text-decoration: underline;
  color: #0000EE;
}

body {
  display: block;
  margin: 0;
  max-width: 840px;
}

figure:hover {
  position: relative;
}

figure:hover::after {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  width: 20px;
  border-right: 4px solid var(--sl-color-primary-400);
  height: 100%;
  border-radius: 4px;
}

figure.ProseMirror-selectednode {
  position: relative;
}

figure.ProseMirror-selectednode::before {
  position: absolute;
  content: "";
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background: var(--sl-color-primary-400);
  opacity: 0.5;
  z-index: 1;
}

.slot-content {
  cursor: text;
}

.ProseMirror {
  position: relative;
  outline: none;
  display: block;
  white-space: normal !important;
  background: white;
  border: 1px solid var(--sl-color-gray-300);
  padding: 19px;
  min-height: 100%;
  box-sizing: border-box;
}

[data-ww-editing=unknowncustom] {
  border: 2px solid var(--sl-color-warning-600);
  padding: 10px;
  color: var(--sl-color-warning-600);
  text-align: center;
}

[data-ww-editing=unknowncustom]::before {
  display: inline-block;
  content: "⚠  Unknown element";
  margin-right: 1ch;
  font-size: 1.25rem;
}

[data-ww-editing=unknowncustom]::after {
  content: attr(data-ww-tagname);
  font-family: monospace;
  font-weight: bold;
}

.ww-widget {
  --ww-action-opacity: 1;
  position: relative !important;
}

.ProseMirror > :not(.ProseMirror-widget) {
  position: relative;
}

/*
.ProseMirror > :not(.ProseMirror-widget)::after {
  content: "";
  position: absolute;
  right: -18px;
  top: 0;
  border-right: 6px solid transparent;
  background: none;
  height: 100%;
  cursor: pointer;
  width: 20px;
}*/

.ProseMirror *:not(:is(a, abbr, b, bdi, bdo, cite, code, data, del, dfn, em, i, ins, kbd, q, ruby, s, samp, small, span, strong, sub, sup, time, u, var)):hover {
  outline: 1px dotted var(--sl-color-gray-400);
  outline-offset: 2px;
}

.ProseMirror .ProseMirror-selectednode {
  outline-offset: 2px;
}

.ProseMirror *:not(.ww-inline).ProseMirror-selectednode:hover {
  outline: 2px dotted var(--sl-color-primary-400);
  outline-offset: 2px;
}
/*
.ProseMirror > *:hover::after {
  border-color: var(--sl-color-gray-100);
}

.ProseMirror > *:is([data-ww-selected], :has([data-ww-selected]))::after {
  border-color: var(--sl-color-gray-200);
}

.ProseMirror > *:is([data-ww-selected]:hover, :has([data-ww-selected]:hover))::after {
  border-color: var(--sl-color-gray-300);
}

.ww-widget[editable][data-ww-deleting]::after {
  border-color: var(--sl-color-danger-400);
}*/

:is(.ww-copying, .ww-cutting, .ww-deleting)::before {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  left: 0px;
  opacity: 0.25;
  z-index: 2147483647;
  width: 100%;
  height: 100%;
}

:is(.ww-cutting)::before {
  background: var(--sl-color-warning-400);
}

.ww-deleting::before {
  background: var(--sl-color-danger-400);
}

.ww-selected-inner::before {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  left: 0px;
  background: var(--sl-color-primary-400);
  opacity: 0.25;
  z-index: 2147483647;
  width: 100%;
  height: 100%;
}

.ww-widget#ww_preview {
  position: relative;
  display: block;
  user-select: none;
  -webkit-user-select: none;
  outline: 4px dashed var(--sl-color-primary-400);
}


main:not(:focus-within) .ww-widget.ww-selected {
  outline-color: lightgray;
}

body > .ww-widget::after {
  --ww-widget-highlight-color: transparent;
  content: "";
  position: absolute;
  left: calc(100%);
  top: 1px;
  width: 20px;
  background: linear-gradient(to right, transparent 0% , transparent 40%, var(--ww-widget-highlight-color) 40% , var(--ww-widget-highlight-color) 60%, transparent 60%, transparent 100%);
  height: calc(100% - 2px);
  cursor: pointer;
  box-sizing: border-box;
}

.ww-widget.ww-selected::after {
  --ww-widget-highlight-color: var(--sl-color-primary-400);
}

.ww-widget.ww-deleting::after {
  --ww-widget-highlight-color: var(--sl-color-danger-400);
}

.ww-widget:is(.ww-cutting, .ww-copying)::after {
  --ww-widget-highlight-color: var(--sl-color-warning-400);
}


.ww-widget:hover::after {
  --ww-widget-highlight-color: var(--sl-color-primary-200);
}

.ww-widget.ww-selected:hover::after {
  --ww-widget-highlight-color: var(--sl-color-primary-500);
}

.ww-widget:focus-within {
  --ww-action-opacity: 1;
}

.ww-widget::part(action) {
  opacity: var(--ww-action-opacity);
}

.ProseMirror::before {
  color: darkgray;
  position: absolute;
  content: '⠀';
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
}

[data-empty] {
  position: relative;
}

:is(h1, h2, h3, h4, h5, h6)[data-empty]::before {
  content: attr(data-placeholder);
  position: absolute;
  top: 0;
  left: 2px;
  color: var(--sl-color-gray-400);
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
}

html[data-dragover] .ProseMirror::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0px;
  background: var(--sl-color-primary-600);
  opacity: 10%;
  height: 100%;
  width: 100%;
}

.ProseMirror th,
.ProseMirror td {
  min-width: 1em;
  border: 1px solid var(--sl-color-gray-600);
  padding: 3px 5px;
  transition: width 0.1s;
}

.ProseMirror .tableWrapper {
  margin: 1em 0;
}

.ProseMirror th {
  font-weight: bold;
  text-align: left;
}

table .ProseMirror-gapcursor {
  border: 2px dashed var(--sl-color-primary-600);
  display: table-cell;
  min-width: 1em;
  padding: 3px 5px;
  vertical-align: top;
  box-sizing: border-box;
  position: relative;
  height: 100%;
}

table .ProseMirror-gapcursor::after {
  border-top: none;
  border-left: 1px solid black;
  width: 2px;
  height: 1em;
  position: static;
}

.ProseMirror ::selection {
  background-color: var(--sl-color-primary-400);
  color: var(--sl-color-gray-100);
}

abbr {
  text-decoration: underline 1px dotted currentColor;
}

@media only screen and (min-width: 1071px) {

  .ww-widget::part(action) {
    position: fixed;
    width: calc(min(100vw - 840px - 40px, 800px));
    height: var(--ww-toolbox-action-height);
    left: var(--ww-toolbox-action-x);
    top: var(--ww-toolbox-action-y);
    overflow: auto;
    padding-top: 5px;
    user-select: none;
    -webkit-user-select: none;
  }

  .ww-widget:not(:focus-within)::part(action) {
    display: none;
  }
}

@media print {
  html {
    overflow: visible;
    background: none;
    border: none;
  }

  body {
    background: none;
    border: none;
  }

  .ProseMirror {
    background: none;
    border: none;
  }

  .ProseMirror[data-empty]::before {
    display: none;
  }
}


iframe:not([src]), picture:not(:has(img[src])) {
  background: lightgray;
  position: relative;
}

:is(picture, iframe)::after {
  position: absolute;
  top: 0;
  left: 0;
  left: calc(50% - 32px);
  top: calc(50% - 32px);
  width: 64px;
  height: 64px;
}

picture {
  cursor: pointer;
}

picture:not(:has(img[src]))::after {
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-photo" width="64" height="64" viewBox="0 0 24 24" stroke-width="2" stroke="darkgray" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 8h.01" /><path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" /><path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" /><path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3" /></svg>');
}

picture:not(:has(img[src])) {
  aspect-ratio: 16/9;
}

video:not([controls]) {
  display: unset !important;
}